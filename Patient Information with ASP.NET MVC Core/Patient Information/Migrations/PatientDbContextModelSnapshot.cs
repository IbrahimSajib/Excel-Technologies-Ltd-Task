// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Patient_Information.Data;

#nullable disable

namespace Patient_Information.Migrations
{
    [DbContext(typeof(PatientDbContext))]
    partial class PatientDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Patient_Information.Models.Allergies", b =>
                {
                    b.Property<int>("AllergiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AllergiesId"));

                    b.Property<string>("AllergiesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AllergiesId");

                    b.ToTable("Allergies");

                    b.HasData(
                        new
                        {
                            AllergiesId = 1,
                            AllergiesName = "Drugs - Penicillin"
                        },
                        new
                        {
                            AllergiesId = 2,
                            AllergiesName = "Drusg - Others"
                        },
                        new
                        {
                            AllergiesId = 3,
                            AllergiesName = "Animals"
                        },
                        new
                        {
                            AllergiesId = 4,
                            AllergiesName = "Food"
                        },
                        new
                        {
                            AllergiesId = 5,
                            AllergiesName = "Oniments"
                        },
                        new
                        {
                            AllergiesId = 6,
                            AllergiesName = "Plant"
                        },
                        new
                        {
                            AllergiesId = 7,
                            AllergiesName = "Sprays"
                        },
                        new
                        {
                            AllergiesId = 8,
                            AllergiesName = "Others"
                        },
                        new
                        {
                            AllergiesId = 9,
                            AllergiesName = "No Allergies"
                        });
                });

            modelBuilder.Entity("Patient_Information.Models.AllergiesDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AllergiesId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AllergiesId");

                    b.HasIndex("PatientId");

                    b.ToTable("AllergiesDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllergiesId = 4,
                            PatientId = 1
                        },
                        new
                        {
                            Id = 2,
                            AllergiesId = 7,
                            PatientId = 1
                        },
                        new
                        {
                            Id = 3,
                            AllergiesId = 8,
                            PatientId = 2
                        });
                });

            modelBuilder.Entity("Patient_Information.Models.Diseases", b =>
                {
                    b.Property<int>("DiseasesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiseasesId"));

                    b.Property<string>("DiseasesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiseasesId");

                    b.ToTable("Diseases");

                    b.HasData(
                        new
                        {
                            DiseasesId = 1,
                            DiseasesName = "Ischemic Heart Disease"
                        },
                        new
                        {
                            DiseasesId = 2,
                            DiseasesName = "Stroke"
                        },
                        new
                        {
                            DiseasesId = 3,
                            DiseasesName = "Influenza or Flu"
                        },
                        new
                        {
                            DiseasesId = 4,
                            DiseasesName = "Pneumonia"
                        },
                        new
                        {
                            DiseasesId = 5,
                            DiseasesName = "Alzheimer’s disease"
                        },
                        new
                        {
                            DiseasesId = 6,
                            DiseasesName = "Arthritis"
                        },
                        new
                        {
                            DiseasesId = 7,
                            DiseasesName = "Angina"
                        },
                        new
                        {
                            DiseasesId = 8,
                            DiseasesName = "Anorexia nervosa"
                        },
                        new
                        {
                            DiseasesId = 9,
                            DiseasesName = "Anxiety disorders"
                        });
                });

            modelBuilder.Entity("Patient_Information.Models.NCD", b =>
                {
                    b.Property<int>("NCDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NCDId"));

                    b.Property<string>("NCDName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NCDId");

                    b.ToTable("NCDs");

                    b.HasData(
                        new
                        {
                            NCDId = 1,
                            NCDName = "Asthma"
                        },
                        new
                        {
                            NCDId = 2,
                            NCDName = "Cancer"
                        },
                        new
                        {
                            NCDId = 3,
                            NCDName = "Disorders of ear"
                        },
                        new
                        {
                            NCDId = 4,
                            NCDName = "Disorder of eye"
                        },
                        new
                        {
                            NCDId = 5,
                            NCDName = "Mental illness"
                        },
                        new
                        {
                            NCDId = 6,
                            NCDName = "Oral helth problems"
                        });
                });

            modelBuilder.Entity("Patient_Information.Models.NCD_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NCDId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NCDId");

                    b.HasIndex("PatientId");

                    b.ToTable("NCD_Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NCDId = 3,
                            PatientId = 1
                        },
                        new
                        {
                            Id = 2,
                            NCDId = 5,
                            PatientId = 1
                        },
                        new
                        {
                            Id = 3,
                            NCDId = 4,
                            PatientId = 2
                        },
                        new
                        {
                            Id = 4,
                            NCDId = 5,
                            PatientId = 2
                        });
                });

            modelBuilder.Entity("Patient_Information.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<int>("DiseasesId")
                        .HasColumnType("int");

                    b.Property<int>("Epilepsy")
                        .HasColumnType("int");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.HasIndex("DiseasesId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            DiseasesId = 9,
                            Epilepsy = 2,
                            PatientName = "Lorem"
                        },
                        new
                        {
                            PatientId = 2,
                            DiseasesId = 2,
                            Epilepsy = 2,
                            PatientName = "Amet"
                        });
                });

            modelBuilder.Entity("Patient_Information.Models.AllergiesDetails", b =>
                {
                    b.HasOne("Patient_Information.Models.Allergies", "Allergies")
                        .WithMany("AllergiesDetails")
                        .HasForeignKey("AllergiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patient_Information.Models.Patient", "Patient")
                        .WithMany("AllergiesDetails")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergies");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Patient_Information.Models.NCD_Details", b =>
                {
                    b.HasOne("Patient_Information.Models.NCD", "NCD")
                        .WithMany("NCD_Details")
                        .HasForeignKey("NCDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patient_Information.Models.Patient", "Patient")
                        .WithMany("NCD_Details")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NCD");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Patient_Information.Models.Patient", b =>
                {
                    b.HasOne("Patient_Information.Models.Diseases", "Diseases")
                        .WithMany("Patients")
                        .HasForeignKey("DiseasesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diseases");
                });

            modelBuilder.Entity("Patient_Information.Models.Allergies", b =>
                {
                    b.Navigation("AllergiesDetails");
                });

            modelBuilder.Entity("Patient_Information.Models.Diseases", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("Patient_Information.Models.NCD", b =>
                {
                    b.Navigation("NCD_Details");
                });

            modelBuilder.Entity("Patient_Information.Models.Patient", b =>
                {
                    b.Navigation("AllergiesDetails");

                    b.Navigation("NCD_Details");
                });
#pragma warning restore 612, 618
        }
    }
}
